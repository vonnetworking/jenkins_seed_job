/*
Default Values
===============
*/
gradleVersionDefault = 'gradle-latest'

// gradle files are in the repository root
gradleRootDefault = '${WORKSPACE}'

// gradle task for branches
gradleTasksBranchesDefault = 'build'
// gradle task for Int
gradleTasksRCDefault = 'build'
// gradle switches for branches & int
gradleSwitchesDefault = '--refresh-dependencies'

// junit pattern
junitResultsDefault = '**/build/test-results/**/*.xml'

// coverage
coverageTool='jacoco'
// if (coverageTool == 'jacoco') { } else if (coverageTool == 'cobertura') {}

// jacoco defaults
jacocoClassesDefault = '**/build/classes/**/main'
jacocoExcludeClassesDefault = '**/*Test*.class, **/test/**, *fixtures*.class, *fixture*.class'
jacocoMinlinesDefault = '60'
jacocoMaxlinesDefault = '80'

// sonar defaults
defaultSonarSrc = "./src/main"
defaultSonarJavaBinaries = "./build/classes/java/main"

// cobertura defaults are set by the Jenkins plugin


//Sonarqube Workspace Definition
sonarWorkspace = '${WORKSPACE}'


// Maven build support details
mvnjunitResults		= '**/target/surefire-reports/**/*.xml' 
mvnjacocoExec		= '**/target/coverage-reports/*.exec'
mvnjacocoClasses	= '**/target/classes'
mvnjacocoSource		= '**/src/main/java'

buildCommandDefault = 'build'

mvnjunitResultsDefault	= '**/target/surefire-reports/**/*.xml'
mvnjacocoClassesDefault	= '**/target/classes'

notificationSender = 'Cloud_MDTC_CICD_Support@freddiemac.com'

/*
Modern Delivery Products
========================
Data structure:
mdproducts {
    UNIQUE KEY FOR EACH PRODUCT(Must not contain a dash (-) as this character is not allowed by the Java language) {
        Git Repo name is good. IMPORTANT: ( CONVERT - to _ )
        Properties for each product
    }
}
*/
mdproducts {
    hwservlet {
        bitbucketprojectkey = 'EXAMPLES'        // Bitbucket project key
        bitbucketprojectname = 'Modern Delivery Examples'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'hwservlet'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_atlassian_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'y'  // Flag to indicate if we generate Release Candidate Pipeline
        nightlyPipeline = 'y' // Flag to indicate if we generate Nightly Build Pipeline
        cdPipeline = 'y' // Flag to generate -deploy pipeline
    }

    jenkinsdsl {
        bitbucketprojectkey = 'TECHPILLAR'        // Bitbucket project key
        bitbucketprojectname = 'Technology Enablement & Engineering Practices'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'jenkinsdsl'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_alm_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'n'
    }

    mdjsl {
        bitbucketprojectkey = 'TECHPILLAR'        // Bitbucket project key
        bitbucketprojectname = 'Technology Enablement & Engineering Practices'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'mdjsl'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_alm_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'n'
    }

    aevalidateapp {
        bitbucketprojectkey = 'GI'        // Bitbucket project key
        bitbucketprojectname = 'Goldfield Integration'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'ae-validateapp'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_goldint_tm_gg'  // Product teams AD Group to govern entitlements
        prodReleasePOLdapGroup = 'ccsdev2g'
        jacocominlines = '0'
        jacocomaxlines = '0'
        rcPipeline = 'y'
        cdPipeline = 'y' // Flag to generate -deploy pipeline
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f404320@FHLMC.com,f401142@fhlmc.com,c47233@fhlmc.com'  // comma separated email addresses
    }
    
    aedatabasemigration {
        bitbucketprojectkey = 'GI'        // Bitbucket project key
        bitbucketprojectname = 'Goldfield Integration'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'ae-databasemigration'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_goldint_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'y'
    }    

    'service-platform-demos' {
        bitbucketprojectkey = 'GI'        // Bitbucket project key
        bitbucketprojectname = 'Goldfield Integration'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'service-platform-demos'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_goldint_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'y'
    }   
    
    atlas_mvp {
        bitbucketprojectkey = 'ATL'        // Bitbucket project key
        bitbucketprojectname = 'Atlas Data Services'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'atlas_mvp'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_atlas_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'y'
    }

    external_hub_ba0272_ms02 {
        bitbucketprojectkey = 'UH'        // Bitbucket project key
        bitbucketprojectname = 'Universal Hub'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'external_hub_ba0272_ms02'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_unihub_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'n'
        nightlyPipeline = 'y' 
        cdPipeline = 'y'
    }

    internal_hub_ba0272_ms01 {
        bitbucketprojectkey = 'UH'        // Bitbucket project key
        bitbucketprojectname = 'Universal Hub'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'internal_hub_ba0272_ms01'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_unihub_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'n'
    }

    investor_reporting_common_ba0275_ms00 {
        bitbucketprojectkey = 'UH'        // Bitbucket project key
        bitbucketprojectname = 'Universal Hub'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'investor_reporting_common_ba0275_ms00'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_unihub_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'y'
        jacocoMinlinesDefault = '1'
        jacocoMaxlinesDefault = '10'
        nightlyPipeline = 'y' // Flag to indicate if we generate Nightly Build Pipeline
        cdPipeline = 'y' // Flag to generate -deploy pipeline
    }

    investor_reporting_loan_activity_ba0275_ms02 {
        bitbucketprojectkey = 'UH'        // Bitbucket project key
        bitbucketprojectname = 'Universal Hub'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'investor_reporting_loan_activity_ba0275_ms02'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_unihub_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'n'
        nightlyPipeline = 'y' // Flag to indicate if we generate Nightly Build Pipeline
        cdPipeline = 'y'
    }

    investor_reporting_servicing_loan_services_ba0275_ms01 {
        bitbucketprojectkey = 'UH'        // Bitbucket project key
        bitbucketprojectname = 'Universal Hub'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'investor_reporting_servicing_loan_services_ba0275_ms01'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_unihub_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'n'
    }

    universal_hub {
        bitbucketprojectkey = 'UH'        // Bitbucket project key
        bitbucketprojectname = 'Universal Hub'       // Human readable Bitbucket project name
        bitbucketprojectrepo = 'universal_hub'      // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique seperator in the name
        productLdapGroup = 'modp_unihub_tm_gg'  // Product teams AD Group to govern entitlements
        rcPipeline = 'y'
        nightlyPipeline = 'y' // Flag to indicate if we generate Nightly Build Pipeline
        buildTool = 'npm'
        cdPipeline = 'y'
    }

    service_platform_demos {
        bitbucketprojectkey = 'EXAMPLES'                  // BitBucket project key
        bitbucketprojectname = 'Modern Delivery Examples' // Human readable Bitbucket
        bitbucketprojectrepo = 'service-platform-demos'   // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique separator in the name
        productLdapGroup = 'modp_atlassian_gg'            // Product team's AD Group to govern entitlements
        rcPipeline = 'y'
        nightlyPipeline = 'n'
    }
    
    mdds_document_digitization_dataservice_ba0277_ms04 {
        bitbucketprojectkey = 'DD'                  // BitBucket project key
        bitbucketprojectname = 'Document Digitization' // Human readable Bitbucket
        bitbucketprojectrepo = 'BA0277-MS04_mdds_document_digitization_dataservice'   // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique separator in the name
        productLdapGroup = 'modp_docdig_tm_gg'            // Product team's AD Group to govern entitlements
        rcPipeline = 'y'
        nightlyPipeline = 'y'
    }    
    
    digital_loan_submission_portal_ba0294_ms01 {
		bitbucketprojectkey 	= 'MFDLS'	// Bitbucket project key
		bitbucketprojectname 	= 'MF DLS'	// Human readable Bitbucket project name
		bitbucketprojectrepo 	= 'digital_loan_submission_portal_ba0294_ms01' // Name of the repository (MUST NOT CONTAIN A TILDA (~) as we use this to provide a unique separator in the name)
		productLdapGroup     	= 'modp_mf_dls_tm_gg'	// Product team's AD Group to govern entitlements
		rcPipeline		        = 'y'	// Feature toggled additional piplelines to be created
		cdPipeline = 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		nightlyPipeline		    = 'y'	// Feature toggled additional pipelines to be created
        prodReleasePOLdapGroup = 'modp_mf_dls_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
    
    // Onboarding PE Cash
    pma_managepricingglobalresources_ba0171_ms20 {
    	bitbucketprojectkey 	= 'PRICINGEC'
        bitbucketprojectname 	= 'Pricing Execution Cash'
        bitbucketprojectrepo	= 'pma_managepricingglobalresources_ba0171_ms20'
        productLdapGroup		= 'modp_pecash_tm_gg'
        rcPipeline				= 'y'
        buildTool				= 'maven'
        cdPipeline				= 'y'
    }
    
    //Onboarding CRTCE
    mi_factor {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'MI-Factor'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        //buildTool				= 'maven'
        cdPipeline				= 'y'
    }
    
     IMAGIN_Microservices {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'IMAGIN_Microservices'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        buildTool				= 'npm'
        cdPipeline				= 'y'
    }
    
     DAS {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'DAS'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        cdPipeline				= 'y'
    }
    
     crtce_termination {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'crtce-termination'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        cdPipeline				= 'y'
    }
    
     Reporting_Engine {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'Reporting_Engine'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        cdPipeline				= 'y'
    }
    
     CRTCE_PMI {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'crtce_pmi_ba0208_ms01'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        cdPipeline				= 'y'
    }    
    
    /*
    CRTCE_Database {
    	bitbucketprojectkey		= 'CRTCE'
        bitbucketprojectname	= 'CRT CE'
        bitbucketprojectrepo	= 'CRTCE_Database'
        productLdapGroup		= 'modp_crtce_tm_gg'
        rcPipeline				= 'y'
        cdPipeline				= 'y'
    }*/
    //Pipelines for CRTCE ending block
    
    deal_crtba0205 {
    	bitbucketprojectkey		= 'CRT'
		bitbucketprojectname	= 'CRT - Securitization'
		bitbucketprojectrepo	= 'deal_crtba0205'
		productLdapGroup		= 'modp_crtsec_tm_gg'
		rcPipeline				= 'y'
        buildTool				= 'maven'
        buildCommand			= 'install'
        cdPipeline				= 'y'
    }
    
    angular_demo {
    	bitbucketprojectkey 	= 'EXAMPLES'
        bitbucketprojectname	= 'Modern Delivery Examples'
        bitbucketprojectrepo	= 'angular-repo'
        productLdapGroup		= 'modp_atlassian_gg'
        // buildTool			= 'angular'
    }
    
    getdata_dq_app {
    	bitbucketprojectkey 	= 'GETDATA'
        bitbucketprojectname	= 'getData-Data Engineering & Transformation'	
        bitbucketprojectrepo	= 'getdata_dq_app'
        productLdapGroup		= 'modp_getdata_tm_gg'
        rcPipeline				= 'y'
        nightlyPipeline			= 'y'
        cdPipeline				= 'y'
    }
    
     getdata_dq_app_ui {
    	bitbucketprojectkey 	= 'GETDATA'
        bitbucketprojectname	= 'getData-Data Engineering & Transformation'	
        bitbucketprojectrepo	= 'getdatadqUI_HS0208_ms01'
        productLdapGroup		= 'modp_getdata_tm_gg'
        buildTool               = 'npm'
        rcPipeline				= 'y'
        nightlyPipeline			= 'y'
        cdPipeline				= 'y'
    }
    
    // MF DLS repos
    digital_loan_submission_b2b_ba0294_ms06 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_b2b_ba0294_ms06'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
     digital_loan_submission_data_service_ba0294_ms02 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_data_service_ba0294_ms02'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_dls_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
    
     digital_loan_submission_edit_check_ba0294_ms05 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_edit_check_ba0294_ms05'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_dls_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
    
     digital_loan_submission_issue_workflow_ba0294_ms03 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_issue_workflow_ba0294_ms03'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
     digital_loan_submission_mapping_ba0294_ms04 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_mapping_ba0294_ms04'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_dls_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
    
     digital_loan_submission_opportunity_data_submission_ba0294_ms00 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_opportunity_data_submission_ba0294_ms00'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_dls_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
    
     digital_loan_submission_ous_adaptor_ba0294_ms07 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_ous_adaptor_ba0294_ms07'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
     digital_loan_submission_pipeline_automation_ba0294 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_pipeline_automation_ba0294'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
   
   //MFHUB
   mf_hub_ba0272 {
    	bitbucketprojectkey		= 'MFHUB'
        bitbucketprojectname	= 'MF HUB'
        bitbucketprojectrepo	= 'mf_hub_ba0272'
    	productLdapGroup      	= 'modp_mfhub_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
		buildTool				= 'npm'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfhub_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
    
    mf_user_service_ba0272_ms03 {
    	bitbucketprojectkey		= 'MFHUB'
        bitbucketprojectname	= 'MF HUB'
        bitbucketprojectrepo	= 'mf_user_service_ba0272_ms03'
    	productLdapGroup      	= 'modp_mfhub_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfhub_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
	}
	
	universal_hub_ba0272_ms01 {
    	bitbucketprojectkey		= 'MFHUB'
        bitbucketprojectname	= 'MF HUB'
        bitbucketprojectrepo	= 'universal_hub_ba0272_ms01'
    	productLdapGroup      	= 'modp_mfhub_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		buildTool				= 'npm'
		cdPipeline 				= 'y'
	}
    
    notification_services_ba0273 {  
    	bitbucketprojectkey		 = 'MFHUB'  
        bitbucketprojectname	 = 'MF HUB'  
        bitbucketprojectrepo 	 = 'notification_services_ba0273'    
        productLdapGroup     	 = 'modp_mfhub_tm_gg' 
        rcPipeline         		 = 'y'
        nightlyPipeline     	 = 'y'  
        cdPipeline				 = 'y'
        
      }
    
    //MFLLWM Service
    loan_lifecycle_service {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'loan_lifecycle-service'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
    llm_get_loan_list_service_hs0186_ms03 {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'llm_get_loan_list_service_hs0186_ms03'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfllwm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c44347@fhlmc.com,f353595@fhlmc.com,f401617@fhlmc.com,f351447@fhlmc.com,f403532@fhlmc.com'  // comma separated email addresses
	}
    
    llm_get_loan_tracker_service_hs0186_ms02 {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'llm_get_loan_tracker_service_hs0186_ms02'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfllwm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c44347@fhlmc.com,f353595@fhlmc.com,f401617@fhlmc.com,f351447@fhlmc.com,f403532@fhlmc.com'  // comma separated email addresses
	}
    
    llm_state_service_hs0186_ms01 {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'llm_state_service_hs0186_ms01'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfllwm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c44347@fhlmc.com,f353595@fhlmc.com,f401617@fhlmc.com,f351447@fhlmc.com,f403532@fhlmc.com'  // comma separated email addresses
	}
    
    llm_underwriting_status_listener_service_hs0186_ms04 {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'llm_underwriting_status_listener_service_hs0186_ms04'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
    llm_data_seeding_hs0186_ms05 {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'llm_data_seeding_hs0186_ms05'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfllwm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c44347@fhlmc.com,f353595@fhlmc.com,f401617@fhlmc.com,f351447@fhlmc.com,f403532@fhlmc.com'  // comma separated email addresses
	}
    
    //MFCRM
    ba0298_ms01_mfpa_mf_opportunity_service {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0298-MS01_MFPA_MF_Opportunity_Service'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
    ba0298_ms02_mfpa_mf_production_due_diligence_service {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0298-MS02_MFPA_MF_Production_Due_Diligence_Service'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        	jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        	prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
    ba0298_mf_production_automation_ui {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0298_MF_Production_Automation_UI'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		buildTool				= 'npm'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
   ba0304_mf_affordability_service {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0304_MF_Affordability_Service'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
    BA0305_MF_Web_Search_Service {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0305_MF_Web_Search_Service'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
    BA0301_MF_REIS_Service {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0301_MF_REIS_Service'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
    BA0300_MF_Bridger_Service {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'BA0300_MF_Bridger_Service'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
		jacocominlines = '0'
        jacocomaxlines = '0'
		prodReleasePOLdapGroup = 'modp_mfcrm_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'c49982@FHLMC.com,c41451@fhlmc.com,c41332@fhlmc.com,f400076@fhlmc.com'  // comma separated email addresses
    }
    
    ff5202_multifamily_underwrite_adapter {
        bitbucketprojectkey		= 'MFCRM'
        bitbucketprojectname	= 'MFCRM'
        bitbucketprojectrepo	= 'ff5202_multifamily_underwrite_adapter'
    	productLdapGroup      	= 'modp_mfcrm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'n' 
		cdPipeline 				= 'y'
    }
    
    loan_lifecycle_management {
    	bitbucketprojectkey		= 'MFLLWM'
        bitbucketprojectname	= 'MF LLWM'
        bitbucketprojectrepo	= 'loan-lifecycle-management'
    	productLdapGroup      	= 'modp_mfllwm_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
    //MF CME
    cme_calculator_service {
    	bitbucketprojectkey		= 'MFCME'
        bitbucketprojectname	= 'Modern Delivery MFCME'
        bitbucketprojectrepo	= 'cme-calculator-service'
    	productLdapGroup      	= 'modp_mfcme_tm_gg'
		nightlyPipeline     	= 'y' 
	}
    
    
    cme_data_sync_service_ba0310_ct4251 {
		bitbucketprojectkey 	= 'MFCME' 
		bitbucketprojectname	= 'Modern Delivery MFCME'
		bitbucketprojectrepo 	= 'cme-data-sync-service-ba0310-ct4251' 
		productLdapGroup 		= 'modp_mfcme_tm_gg' 
		rcPipeline 				= 'y' 
		nightlyPipeline 		= 'y'
        buildTool               = 'maven'	
		cdPipeline 				= 'y'  
	}

	cme_securitization_deal_service_ba0310_oh3907 {
		bitbucketprojectkey 	= 'MFCME' 
		bitbucketprojectname 	= 'Modern Delivery MFCME' 
		bitbucketprojectrepo 	= 'cme-securitization-deal-service-ba0310-oh3907'
		productLdapGroup 		= 'modp_mfcme_tm_gg' 
		rcPipeline 				= 'y' 
		nightlyPipeline 		= 'y'
        buildTool				= 'maven'
		cdPipeline 				= 'y'
        rcPipeline 				= 'y'
	}

	cme_document_management_proxy_service_ba0310_jc0932 {
		bitbucketprojectkey 	= 'MFCME' 
		bitbucketprojectname 	= 'Modern Delivery MFCME'
		bitbucketprojectrepo 	= 'cme-document-management-proxy-service-ba0310-jc0932' 
		productLdapGroup 		= 'modp_mfcme_tm_gg' 
		rcPipeline 				= 'y' 
		nightlyPipeline 		= 'y'
        buildTool				= 'maven'
		cdPipeline 				= 'y'  
	}
    
    cme_common_lib_ba0310 {
		bitbucketprojectkey 	= 'MFCME' 
		bitbucketprojectname 	= 'Modern Delivery MFCME'
		bitbucketprojectrepo 	= 'cme_common_lib_ba0310' 
		productLdapGroup 		= 'modp_mfcme_tm_gg' 
		rcPipeline 				= 'y' 
		nightlyPipeline 		= 'n'
        buildTool				= 'maven'
		cdPipeline 				= 'n'  
	}
    
    //MF ADV
    party_mastering_service {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'party_mastering_service_ba0276_ms01'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
    
        conflict_resolution_service {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_conflict_resolution_service_ba0276_ms04'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
	
   rds_integration_service {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_rds_integration_service_ba0276_ms02'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
	
   lexisnexis_integration_service {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_lexisnexis_integration_service_ba0276_ms03'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
	
  conflict_resolution_workflow {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_conflict_resolution_workflow_ba0276_ms04'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
	
    notification_service {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_notification_service_ba0276_ms05'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
    
    mfpm_adv_data_seeding {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_adv_data_seeding_ba0276_ms01'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
    
      mfpm_conflict_resolution_ui {
    	bitbucketprojectkey		= 'MFADV'
        bitbucketprojectname	= 'MF ADV'
        bitbucketprojectrepo	= 'mfpm_conflict_resolution_ui_ba0276_ms04'
    	productLdapGroup      	= 'modp_mf_adv_tm_gg'
		rcPipeline         		= 'y'
        buildTool				= 'npm'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
        jacocominlines = '0'
        jacocomaxlines = '0'
        prodReleasePOLdapGroup = 'modp_mf_adv_po_gg'
        prodReleasePipeline = 'y' // flag to generate prod release pipeline
        notificationRecipients = 'f401137@FHLMC.com,f404232@fhlmc.com,f362985@fhlmc.com,c49312@fhlmc.com,c49157@fhlmc.com,c37012@fhlmc.com'  // comma separated email addresses
	}
    
//COMPENG 
comparable_datascience_im0183 {
    bitbucketprojectkey		= 'COMPENG'
    bitbucketprojectname	= 'Comparables Engine'
    bitbucketprojectrepo	= 'comparable_datascience_im0183'
	productLdapGroup      	= 'modp_compeng_tm_gg'
	rcPipeline         		= 'y'
	nightlyPipeline     	= 'y' 
	cdPipeline 				= 'y'
	}

comparable_service_im0183 {
    bitbucketprojectkey		= 'COMPENG'
    bitbucketprojectname	= 'Comparables Engine'
    bitbucketprojectrepo	= 'comparable_service_im0183'
	productLdapGroup      	= 'modp_compeng_tm_gg'
	rcPipeline         		= 'y'
	nightlyPipeline     	= 'y' 
	cdPipeline 				= 'y'
	}

comparable_UI_im0183 {
    bitbucketprojectkey		= 'COMPENG'
    bitbucketprojectname	= 'Comparables Engine'
    bitbucketprojectrepo	= 'comparable_UI_im0183'
	productLdapGroup      	= 'modp_compeng_tm_gg'
	rcPipeline      	   	= 'y'
	nightlyPipeline     	= 'y' 
	cdPipeline 				= 'y'
	}
  
comparable_userservice_im0183 {
    bitbucketprojectkey		= 'COMPENG'
    bitbucketprojectname	= 'Comparables Engine'
    bitbucketprojectrepo	= 'comparable_userservice_im0183'
	productLdapGroup      	= 'modp_compeng_tm_gg'
	rcPipeline         		= 'y'
	nightlyPipeline     	= 'y' 
	cdPipeline 				= 'y'
	}
    
comparable_dataadapter_im0183  {
	bitbucketprojectkey 	= 'COMPENG' 
	bitbucketprojectname 	= 'Comparables Engine' 
	bitbucketprojectrepo 	= 'comparable_dataadapter_im0183' 
	productLdapGroup 		= 'modp_compeng_tm_gg' 
	rcPipeline 				= 'y' 
	nightlyPipeline			= 'y' 
	cdPipeline				= 'y'
    }
    
//MFSSS 
investor_reporting_common_ba0275_ms00 {
    bitbucketprojectkey		= 'MFSSS'
    bitbucketprojectname	= 'Self-Service Servicing'
    bitbucketprojectrepo	= 'investor_reporting_common_ba0275_ms00'
	productLdapGroup      	= 'modp_mfsss_tm_gg'
	rcPipeline         		= 'y'
	nightlyPipeline     	= 'y' 
	cdPipeline 				= 'y'
	}
    
internal_hub_ba0272_ms01 {
    bitbucketprojectkey		= 'MFSSS'
    bitbucketprojectname	= 'Self-Service Servicing'
    bitbucketprojectrepo	= 'internal_hub_ba0272_ms01'
	productLdapGroup      	= 'modp_mfsss_tm_gg'
	rcPipeline         		= 'y'
	nightlyPipeline     	= 'y' 
	cdPipeline 				= 'y'
	}
    
    /*
     digital_loan_submission_portal_ba0294_ms01 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_portal_ba0294_ms01'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    
     digital_loan_submission_test_automation_ba0294 {
    	bitbucketprojectkey		= 'MFDLS'
        bitbucketprojectname	= 'MF DLS'
        bitbucketprojectrepo	= 'digital_loan_submission_test_automation_ba0294'
    	productLdapGroup      	= 'modp_mf_dls_tm_gg'
		rcPipeline         		= 'y'
		nightlyPipeline     	= 'y' 
		cdPipeline 				= 'y'
	}
    */
}

/*
List of configuration per pipeline
================================
    bitbucketprojectkey               (required)  - BitBucket Project unique KEY
    bitbucketprojectname              (required)  - Human readable name of the BitBucket Project
    bitbucketprojectrepo              (required)  - Name projects and clone repositories
    productLdapGroup                  (required)  - Name of the product teams AD Group to govern entitlements

    envvar                  (optional)  - turn on picking up env variables from md/BranchesPipeline.env, md/RCPipeline.env
    gradleVersion           (optional)  - The gradle version to use (must be configured in Jenkins): Default is 'gradle-latest'
    gradleroot              (optional)  - Where the build.gradle file is located: Default is ${WORKSPACE} (The root of the git project)
    gradleTasksBranches     (optional)  - The gradle build tasks for the -int job: Default is build
    gradleTasksRC          (optional)  - The gradle build tasks for the -int job: Default is build nimbleSetupFitnesse -x artifactoryPublish

    junitResults            (optional)  - Does the project produce junit reports. This property holds the value of where to find the xml files:

    coverageResults         (optional)  - Does the project produce jacoco code coverage reports: Default is yes
    jacococlasses           (optional)  - Regex to find the location of class files for Jacaco:
    jacocoexcludeclasses    (optional)  - Regex to find the location of class files to exclude for Jacaco:
    jacocosource            (optional)  - Regex to find the location of source files for Jacaco: Default is set by Jenkins
    jacocominlines          (optional)  - Minimum line coverage. Default is 60
    jacocomaxlines          (optional)  - Maximum line coverage. Default is 80

    coberturaXml            (optional)  - Turns on Cobertura code coverage reports. This property holds the value of where to find the xml files: There is no default value

    dockerBuild             (optional)  - Does the project require a docker build. Default is yes. The commands are: build-images; stop-rm-containers; run-containers
    publishLibs             (optional)  - Does the project publish libraries to Artifactory and NOT produce Images: Default - All products produce images
    publishImages           (optional)  - Does the project publish images to Artifactory: Default is yes
    
    mavenBuild				(optional) - Does this project build with Maven
*/

/*

Documentation
==============

bitbucket clone url https://moddel-tw.fhlmc.com:8046/scm/examples/hwservlet.git

To activate a section or not:
    Only set them where they are needed. The controller either selects the value or passes an empty string
    e.g. gradlehome
    In the md<Type>Job.groovy:         def gradlehome = (data.gradlehome.isEmpty()) ? 'workspace' : ''
    In the md<Type>JobBuilder.groovy:  if(gradleHome) { } //to activate this section

Where multiple options exist:
    Only set them where they are needed. The controller selects either the value in the config or passes a DEFAULT value
    e.g. gradleroot = '${WORKSPACE}/hwServlet'
    In the md<Type>Job.groovy:         def gradleroot = (! data.gradleroot.isEmpty()) ? data.gradleroot : config.gradleRootDefault
    In the md<Type>JobBuilder.groovy:  rootBuildScriptDir(gradleBuildScriptDir)

To activate a section and multiple options exist:
    Only set them where they are needed. The controller selects either the value in the config or passes a DEFAULT value
    e.g. junitResults = 'test.xml' or  junitResults = 'none'

To override the default value for code coverage file add the following line
        coberturaXml = 'coverage.xml'

To create only branch build:
    Add only 2 lines for bitbucketproject, and bitbucketprojectname. Do not add Int and PreProd related configurations

Coverage reporting
    Options: Jacoco or Cobertura
    By default all projects get jacoco
    You can customize jacoco configuration via setting properties e.g. jacocosource = "*main/com/example/**"

    To use Cobertura, use the property coberturaXml and set the value for the location of the coverage file e.g. coberturaXml = 'coverage.xml'

    For projects that have both Java and Python, we need to use Cobertura.
    We set the value of the coberturaXml property to the relevant locations. e.g. coberturaXml = 'app/coverage.xml, service/build/reports/cobertura/coverage.xml'

Publishing binaries to artifactory
    By default the java plugin publishes a project jar and associated pom
    You can declare additional outgoing artifacts for your project, via the artifacts { } closure
    Like dependencies, artifacts are grouped by configurations.
    The archives configuration is the standard configuration to assign your artifacts to.
    The Java plugin automatically assigns the default jar to this configuration.

    publishPoms = 'n' // property will turn off publication of pom files. For example publishing rpms

    Please see this gradle doc for more information: https://docs.gradle.org/current/userguide/artifact_management.html

*/



